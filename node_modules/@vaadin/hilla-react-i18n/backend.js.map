{
  "version": 3,
  "sources": ["src/backend.ts"],
  "sourcesContent": ["import type { Translations, TranslationsResult } from './types.js';\n\nexport interface I18nBackend {\n  loadTranslations(language: string): Promise<TranslationsResult>;\n}\n\nexport class DefaultBackend implements I18nBackend {\n  async loadTranslations(language: string): Promise<TranslationsResult> {\n    const response = await fetch(`./?v-r=i18n&langtag=${language}`);\n    if (!response.ok) {\n      throw new Error('Failed fetching translations.');\n    }\n    const retrievedLocale = response.headers.get('X-Vaadin-Retrieved-Locale');\n    const translations: Translations = await response.json();\n    return {\n      translations,\n      resolvedLanguage: retrievedLocale ?? undefined,\n    };\n  }\n}\n"],
  "mappings": "AAMO,MAAM,eAAsC;AAAA,EACjD,MAAM,iBAAiB,UAA+C;AACpE,UAAM,WAAW,MAAM,MAAM,uBAAuB,QAAQ,EAAE;AAC9D,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,UAAM,kBAAkB,SAAS,QAAQ,IAAI,2BAA2B;AACxE,UAAM,eAA6B,MAAM,SAAS,KAAK;AACvD,WAAO;AAAA,MACL;AAAA,MACA,kBAAkB,mBAAmB;AAAA,IACvC;AAAA,EACF;AACF;",
  "names": []
}
